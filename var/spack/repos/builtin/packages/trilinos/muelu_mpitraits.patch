diff --git a/packages/muelu/src/Rebalancing/MueLu_RepartitionFactory_def.hpp b/packages/muelu/src/Rebalancing/MueLu_RepartitionFactory_def.hpp
index 4a05e11da9..15d73394be 100644
--- a/packages/muelu/src/Rebalancing/MueLu_RepartitionFactory_def.hpp
+++ b/packages/muelu/src/Rebalancing/MueLu_RepartitionFactory_def.hpp
@@ -101,12 +101,14 @@ namespace MueLu {
     Input(currentLevel, "Partition");
   }
 
-  template<class T> class MpiTypeTraits            { public: static MPI_Datatype getType(); };
-  template<>        class MpiTypeTraits<long>      { public: static MPI_Datatype getType() { return MPI_LONG;      } };
-  template<>        class MpiTypeTraits<int>       { public: static MPI_Datatype getType() { return MPI_INT;       } };
-  template<>        class MpiTypeTraits<short>     { public: static MPI_Datatype getType() { return MPI_SHORT;     } };
-  template<>        class MpiTypeTraits<unsigned>  { public: static MPI_Datatype getType() { return MPI_UNSIGNED;  } };
-  template<>        class MpiTypeTraits<long long> { public: static MPI_Datatype getType() { return MPI_LONG_LONG; } };
+  template<class T> class MpiTypeTraits                     { public: static MPI_Datatype getType(); };
+  template<>        class MpiTypeTraits<long>               { public: static MPI_Datatype getType() { return MPI_LONG;      } };
+  template<>        class MpiTypeTraits<int>                { public: static MPI_Datatype getType() { return MPI_INT;       } };
+  template<>        class MpiTypeTraits<short>              { public: static MPI_Datatype getType() { return MPI_SHORT;     } };
+  template<>        class MpiTypeTraits<unsigned>           { public: static MPI_Datatype getType() { return MPI_UNSIGNED;  } };
+  template<>        class MpiTypeTraits<long long>          { public: static MPI_Datatype getType() { return MPI_LONG_LONG; } };
+  template<>        class MpiTypeTraits<unsigned long>      { public: static MPI_Datatype getType() { return MPI_UNSIGNED_LONG; } };
+  template<>        class MpiTypeTraits<unsigned long long> { public: static MPI_Datatype getType() { return MPI_UNSIGNED_LONG_LONG; } };
 
   template <class Scalar, class LocalOrdinal, class GlobalOrdinal, class Node>
   void RepartitionFactory<Scalar, LocalOrdinal, GlobalOrdinal, Node>::Build(Level& currentLevel) const {
-- 
2.19.1

